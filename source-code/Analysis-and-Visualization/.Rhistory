> age <- c(1,3,5,2,11,9,3,9,12,3)
> weight <- c(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)
> mean(weight)
[1] 7.06
> sd(weight)
[1] 2.077498
> cor(age,weight)
[1] 0.9075655
> plot(age,weight)
> q()
age <- c(1,3,5,2,11,9,3,9,12,3)
weight <- c(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)
mean(weight)
sd(weight)
cor(age,weight)
plot(age,weight)
q()
fruitData
fruitData <- read.csv(file="../data/ch02/fruitData.csv", as.is=TRUE)
install.packages("rJava")
install.packages("coreNLP")
library(coreNLP)
library(rJava)
library(rJava)
library(rJava)
library(rJava)
attach(mtcars)
plot(wt, mpg)
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
detach(mtcars)
mtcars
trees
trees[,1]
load("/Users/junshuliu/OneDrive/Master Term 2 Autumn 2018/DIGS 30004/Files/Week 5/Saved for Week 5.RData")
library(stylo)
install.packages("XQuartz")
library(stylo)
ncol(crimtab) # 22 columns
nrow(crimtab) # 42 rows
# Step 1. Find the largest number in the first column.
largest <- max(crimtab[,1])
largest
# Step 2. Go through ALL columns.
# If the next column's largest number is larger than the previous one,
# update the "largest".
# Save the COLUMN number that has the largest number as "thatColumn".
for (n in 1:ncol(crimtab)) {
if (max(crimtab[,n]) > largest) {
largest <- max(crimtab[,n])
thatColumn = n
}
}
largest
thatColumn
# Step 3 (optional). find the ROW number that has the largest number in the column "thatColumn".
thatRow <- which.max(crimtab[,thatColumn])
thatRow
# Make the plot.
plot(crimtab[,thatColumn], col="white")
for (i in 1:ncol(crimtab)) {
lines(crimtab[,i], col = hsv(i/22,i/22,i/22))
}
plot(crimtab[,22])
# Make another plot.
plot(crimtab[thatRow,]) # not using yet
# Make the plot.
plot(crimtab[,thatColumn], col="white")
# Make the plot.
plot(crimtab[,thatColumn], col="white")
for (i in 1:ncol(crimtab)) {
lines(crimtab[,i], col = hsv(i/22,i/22,i/22))
}
hist(crimtab[,thatColumn], col="white", ylab = "Number of crimes")
# Load libraries
library(igraph)
install.packages("igraph")
# Load libraries
library(igraph)
library(RColorBrewer)
options(width=70)
OUTDIR = "../img/ch06/"
dir.create(OUTDIR,FALSE, TRUE)
# Simple example with the British Monarchy
g = graph.empty(directed=TRUE)
2
getwd()
setwd("~/OneDrive/Master Term 2 Autumn 2018/Knowledge Globe/source-code/Analysis & Visualization")
subject <- read.csv('../statistics_subject.csv', stringsAsFactors = FALSE)
keyword <- read.csv('../statistics_keyword.csv', stringsAsFactors = FALSE)
pub     <- read.csv('../statistics_pub.csv', stringsAsFactors = FALSE)
year    <- read.csv('../statistics_year.csv', stringsAsFactors = FALSE)
country <- read.csv('../statistics_country.csv', stringsAsFactors = FALSE)
type    <- read.csv('../statistics_type.csv', stringsAsFactors = FALSE)
# 0. subject
slices <- c(subject$count)
lbls <- c(subject$value)
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=rainbow(length(lbls)), main="Subjects of publications about digital arts in 2017")
# 1. keyword
slices1 <- c(keyword$count)
lbls1 <- c(keyword$value)
pct1 <- round(slices1/sum(slices1)*100)
lbls1 <- paste(lbls1, pct1) # add percents to labels
lbls1 <- paste(lbls1,"%",sep="") # ad % to labels
pie(slices1,labels = lbls1, col=rainbow(length(lbls1)), main="Keywords of publications about digital arts in 2017")
# 2. pub
barplot(pub$count, main = "Publishers of the journals about digital arts in 2017", names.arg=c(pub$value), col=rainbow(20, start=.7, end=.1), las = 2, cex.names = 0.9)
# 3. year (total)
year$count
# 4. country
barplot(country$count, main = "Quantities of publications about digital arts for each countries in 2017", names.arg=c(country$value), las = 2)
# 5. type
slices2 <- c(type$count)
lbls2 <- c(type$value)
pct2 <- round(slices2/sum(slices2)*100)
lbls2 <- paste(lbls2, pct2) # add percents to labels
lbls2 <- paste(lbls2,"%",sep="") # ad % to labels
pie(slices2,labels = lbls2, col=rainbow(length(lbls2)), main="Types of publications about computer in 2017")
# put everything together in one place.
par(mfrow = c(3,2))
# be sure to run the code above.
# 0. subject
pie(slices,labels = lbls, col=rainbow(length(lbls)), main="Subjects of publications about digital arts in 2017")
# 1. keyword
pie(slices1,labels = lbls1, col=rainbow(length(lbls1)), main="Keywords of publications about digital arts in 2017")
# 2. pub
barplot(pub$count, main = "Publishers of the journals about digital arts in 2017", names.arg=c(pub$value), col=rainbow(20, start=.7, end=.1), las = 2, cex.names = 0.9)
# 4. country
barplot(country$count, main = "Quantities of publications about digital arts for each countries in 2017", names.arg=c(country$value), las = 2)
# 5. type
pie(slices2,labels = lbls2, col=rainbow(length(lbls2)), main="Types of publications about computer in 2017")
# now, let's make something fancy!
library(ggplot2)
View(country)
View(keyword)
View(pub)
View(subject)
View(type)
# 0. subject
slices <- c(subject$count)
lbls <- c(subject$value)
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=rainbow(length(lbls)), main="Subjects of publications about digital arts in 2017")
dev.off()
pie(slices,labels = lbls, col=rainbow(length(lbls)), main="Subjects of publications about digital arts in 2017")
# 1. keyword
slices1 <- c(keyword$count)
lbls1 <- c(keyword$value)
pct1 <- round(slices1/sum(slices1)*100)
lbls1 <- paste(lbls1, pct1) # add percents to labels
lbls1 <- paste(lbls1,"%",sep="") # ad % to labels
pie(slices1,labels = lbls1, col=rainbow(length(lbls1)), main="Keywords of publications about digital arts in 2017")
# 4. country
barplot(country$count, main = "Quantities of publications about digital arts for each countries in 2017", names.arg=c(country$value), las = 2)
# 2. pub
barplot(pub$count, main = "Publishers of the journals about digital arts in 2017", names.arg=c(pub$value), col=rainbow(20, start=.7, end=.1), las = 2, cex.names = 0.9)
# 5. type
slices2 <- c(type$count)
lbls2 <- c(type$value)
pct2 <- round(slices2/sum(slices2)*100)
lbls2 <- paste(lbls2, pct2) # add percents to labels
lbls2 <- paste(lbls2,"%",sep="") # ad % to labels
pie(slices2,labels = lbls2, col=rainbow(length(lbls2)), main="Types of publications about computer in 2017")
# put everything together in one place.
par(mfrow = c(3,2))
# be sure to run the code above.
# 0. subject
pie(slices,labels = lbls, col=rainbow(length(lbls)), main="Subjects of publications about digital arts in 2017")
# 1. keyword
pie(slices1,labels = lbls1, col=rainbow(length(lbls1)), main="Keywords of publications about digital arts in 2017")
# 2. pub
barplot(pub$count, main = "Publishers of the journals about digital arts in 2017", names.arg=c(pub$value), col=rainbow(20, start=.7, end=.1), las = 2, cex.names = 0.9)
# 4. country
barplot(country$count, main = "Quantities of publications about digital arts for each countries in 2017", names.arg=c(country$value), las = 2)
# 5. type
pie(slices2,labels = lbls2, col=rainbow(length(lbls2)), main="Types of publications about computer in 2017")
dev.off()
# be sure to run the code above.
# 0. subject
pie(slices,labels = lbls, col=rainbow(length(lbls)), main="Subjects of publications about digital arts in 2017")
# 1. keyword
pie(slices1,labels = lbls1, col=rainbow(length(lbls1)), main="Keywords of publications about digital arts in 2017")
# put everything together in one place.
par(mfrow = c(3,2))
# be sure to run the code above.
# 0. subject
pie(slices,labels = lbls, col=rainbow(length(lbls)), main="Subjects of publications about digital arts in 2017")
# 1. keyword
pie(slices1,labels = lbls1, col=rainbow(length(lbls1)), main="Keywords of publications about digital arts in 2017")
# 2. pub
barplot(pub$count, main = "Publishers of the journals about digital arts in 2017", names.arg=c(pub$value), col=rainbow(20, start=.7, end=.1), las = 2, cex.names = 0.9)
# 4. country
barplot(country$count, main = "Quantities of publications about digital arts for each countries in 2017", names.arg=c(country$value), las = 2)
# 5. type
pie(slices2,labels = lbls2, col=rainbow(length(lbls2)), main="Types of publications about computer in 2017")
iris
# R bokeh
p <- figure() %>%
ly_points(value, count, data = country,
color = value, glyph = value,
hover = list(value, count))
# R bokeh
library(rbokeh)
p <- figure() %>%
ly_points(value, count, data = country,
color = value, glyph = value,
hover = list(value, count))
p
h <- figure(width = 600, height = 400) %>%
#ly_hist(value, data = country, breaks = 40, freq = FALSE) %>%
#ly_density(value, data = country)
ly_hist(value, count, data = country,
color = value, glyph = value,
hover = list(value, count))
h <- figure(width = 600, height = 400) %>%
#ly_hist(value, data = country, breaks = 40, freq = FALSE) %>%
#ly_density(value, data = country)
ly_hist(count, data = country,
color = value, glyph = value,
hover = list(value, count))
h
h <- figure(width = 600, height = 400) %>%
#ly_hist(value, data = country, breaks = 40, freq = FALSE) %>%
#ly_density(value, data = country)
ly_hist(count, data = country)
h
ggplot(country)
ggplot(country, aes(x = value, y = count)) + xlab("Countries") + ylab("Number of publications") + ggtitle(paste('Quantities of publications about digital arts for each countries in 2017'))
p <- figure(width = 1000, height = 600, angle = 45*pi/180) %>%
ly_points(value, count, data = country,
color = value, glyph = value,
hover = list(value, count))
p <- figure(width = 1000, height = 600, angle = 45*pi/180) %>%
ly_points(value, count, data = country,
color = value, glyph = value,
hover = list(value, count))
p
p <- figure(width = 1000, height = 600, las = 2) %>%
ly_points(value, count, data = country,
color = value, glyph = value,
hover = list(value, count))
p
p <- figure(width = 1000, height = 600) %>%
ly_points(value, count, data = country,
color = value, glyph = value,
hover = list(value, count)) %>%
x-axis(angle = 45*pi/180)
p <- figure(width = 1000, height = 600) %>%
ly_points(value, count, data = country,
color = value, glyph = value,
hover = list(value, count)) %>%
x_axis(angle = 45*pi/180)
p <- figure(width = 1000, height = 600) %>%
ly_points(value, count, data = country,
color = value, glyph = value,
hover = list(value, count)) %>%
x_axis(angle = 45)
p1 <- figure(width = 1000, height = 600) %>%
ly_points(count, value, data = country,
color = value, glyph = value,
hover = list(count, value))
p1
# this looks better
p1 <- figure(width = 1000, height = 600) %>%
ly_points(count, value, data = country,
color = value, glyph = value,
hover = list(count, value), theme_legend(background_fill_alpha = 0.5))
# this looks better
p1 <- figure(width = 1000, height = 600) %>%
ly_points(count, value, data = country,
color = value, glyph = value,
hover = list(count, value)) %>%
theme_legend(background_fill_alpha = 0.5)
p1
# this looks better
p1 <- figure(width = 1000, height = 600) %>%
ly_points(count, value, data = country,
color = value, glyph = value,
hover = list(count, value)) %>%
theme_legend(background_fill_alpha = 0.3)
p1
# this looks better
p1 <- figure(width = 1000, height = 600) %>%
ly_points(count, value, data = country,
color = value, glyph = value,
hover = list(count, value)) %>%
theme_legend(background_fill_alpha = 0)
p1
# this looks better
p1 <- figure(width = 1000, height = 600) %>%
ly_points(count, value, data = country,
color = value, glyph = value,
hover = list(count, value)) %>%
theme_legend(background_fill_alpha = 0.15)
p1
# this looks better
p1 <- figure(width = 1000, height = 600) %>%
ly_points(count, value, data = country,
color = value, glyph = value,
hover = list(count, value)) %>%
theme_legend(background_fill_alpha = 0.25)
p1
subject <- read.csv('../statistics_subject.csv', stringsAsFactors = FALSE)
pie(slices,labels = lbls, col=rainbow(length(lbls)), main="Subjects of publications about digital arts in 2017")
dev.off()
pie(slices,labels = lbls, col=rainbow(length(lbls)), main="Subjects of publications about digital arts in 2017")
pie(slices1,labels = lbls1, col=rainbow(length(lbls1)), main="Keywords of publications about digital arts in 2017")
ggplot(country, aes(x = value, y = count)) + xlab("Countries") + ylab("Number of publications") + ggtitle(paste('Quantities of publications about digital arts for each countries in 2017'))
# now, let's make something fancy!
# install.packages("ggplot2")
library(ggplot2)
ggplot(country, aes(x = value, y = count)) + xlab("Countries") + ylab("Number of publications") + ggtitle(paste('Quantities of publications about digital arts for each countries in 2017'))
setwd("~/Documents/GitHub/KnowledgeGlobe/source-code/Analysis & Visualization")
setwd("Documents/GitHub/KnowledgeGlobe/source-code/Analysis & Visualization")
setwd("~/Documents/GitHub/KnowledgeGlobe/source-code/Analysis & Visualization")
setwd("~/Documents/GitHub/KnowledgeGlobe/source-code/Analysis-and-Visualization")
subject <- read.csv('../statistics_subject.csv', stringsAsFactors = FALSE)
keyword <- read.csv('../statistics_keyword.csv', stringsAsFactors = FALSE)
pub     <- read.csv('../statistics_pub.csv', stringsAsFactors = FALSE)
year    <- read.csv('../statistics_year.csv', stringsAsFactors = FALSE)
country <- read.csv('../statistics_country.csv', stringsAsFactors = FALSE)
type    <- read.csv('../statistics_type.csv', stringsAsFactors = FALSE)
topicInput <- readline(prompt="Enter the topic name that you've used in KnowledgeGlobe.py: ")
topicInput
yearInput <- readline(prompt="Enter the year that you've used in KnowledgeGlobe.py: ")
yearInput
# put everything together in one place.
par(mfrow = c(3,2))
# be sure to run the code above.
# 0. subject
par(mar=c(12,4,4,1))
xcor <- barplot(subject$count, main = paste("Subjects of publications about", topicInput, "in", yearInput), names.arg=c(subject$value), las = 2, cex.names = 0.6)
text(x = xcor, y = subject$count, label = subject$count, pos = 3, cex = 0.8, col = "red")
xcor <- barplot(subject$count, main = paste("Subjects of publications about", topicInput, "in", yearInput), names.arg=c(subject$value), las = 2, cex.names = 0.6)
dev.off()
# put everything together in one place.
par(mfrow = c(3,2))
xcor <- barplot(subject$count, main = paste("Subjects of publications about", topicInput, "in", yearInput), names.arg=c(subject$value), las = 2, cex.names = 0.6)
text(x = xcor, y = subject$count, label = subject$count, pos = 3, cex = 0.8, col = "red")
# 1. keyword
xcor1 <- barplot(keyword$count, main = c("Keywords of publications about ", topicInput, " in ", yearInput), names.arg=c(keyword$value), las = 2)
text(x = xcor1, y = keyword$count, label = keyword$count, pos = 3, cex = 0.8, col = "red")
# 2. pub
barplot(pub$count, main = c("Publishers of the journals about ", topicInput, " in ", yearInput), names.arg=c(pub$value), col=rainbow(20, start=.7, end=.1), las = 2, cex.names = 0.9)
# 4. country
barplot(country$count, main = c("Quantities of publications about ", topicInput, " for each countries in ", yearInput), names.arg=c(country$value), las = 2)
# 5. type
pie(slices2,labels = lbls2, col=rainbow(length(lbls2)), main="Types of publications about ", topicInput, " in ", yearInput)
# Pie Chart
# Not recommended unless you have paid API license with full access
# The Basic plan for Springer API will only return the top 20 results for the statistics for each attribute
slices <- c(subject$count)
lbls <- c(subject$value)
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=rainbow(length(lbls)), main=c("Subjects of publications about ", topicInput, " in ", yearInput))
dev.off()
# put everything together in one place.
par(mfrow = c(3,2))
# be sure to run the code above.
# 0. subject
par(mar=c(12,4,4,1))
xcor <- barplot(subject$count, main = paste("Subjects of publications about", topicInput, "in", yearInput), names.arg=c(subject$value), las = 2, cex.names = 0.6)
text(x = xcor, y = subject$count, label = subject$count, pos = 3, cex = 0.8, col = "red")
# 1. keyword
xcor1 <- barplot(keyword$count, main = c("Keywords of publications about ", topicInput, " in ", yearInput), names.arg=c(keyword$value), las = 2)
dev.off()
# put everything together in one place.
par(mfrow = c(3,2))
# be sure to run the code above.
# 0. subject
xcor <- barplot(subject$count, main = paste("Subjects of publications about", topicInput, "in", yearInput), names.arg=c(subject$value), las = 2, cex.names = 0.6)
text(x = xcor, y = subject$count, label = subject$count, pos = 3, cex = 0.8, col = "red")
# 1. keyword
xcor1 <- barplot(keyword$count, main = c("Keywords of publications about ", topicInput, " in ", yearInput), names.arg=c(keyword$value), las = 2)
text(x = xcor1, y = keyword$count, label = keyword$count, pos = 3, cex = 0.8, col = "red")
# 2. pub
barplot(pub$count, main = c("Publishers of the journals about ", topicInput, " in ", yearInput), names.arg=c(pub$value), col=rainbow(20, start=.7, end=.1), las = 2, cex.names = 0.9)
# 4. country
barplot(country$count, main = c("Quantities of publications about ", topicInput, " for each countries in ", yearInput), names.arg=c(country$value), las = 2)
# 5. type
pie(slices2,labels = lbls2, col=rainbow(length(lbls2)), main="Types of publications about ", topicInput, " in ", yearInput)
dev.off()
# put everything together in one place.
par(mfrow = c(3,2))
# be sure to run the code above.
# 0. subject
xcor <- barplot(subject$count, main = paste("Subjects of publications about", topicInput, "in", yearInput), names.arg=c(subject$value), las = 2, cex.names = 0.6)
text(x = xcor, y = subject$count, label = subject$count, pos = 3, cex = 0.8, col = "red")
# 1. keyword
xcor1 <- barplot(keyword$count, main = c("Keywords of publications about ", topicInput, " in ", yearInput), names.arg=c(keyword$value), las = 2)
text(x = xcor1, y = keyword$count, label = keyword$count, pos = 3, cex = 0.8, col = "red")
# 2. pub
barplot(pub$count, main = c("Publishers of the journals about ", topicInput, " in ", yearInput), names.arg=c(pub$value), col=rainbow(20, start=.7, end=.1), las = 2, cex.names = 0.9)
# 4. country
barplot(country$count, main = c("Quantities of publications about ", topicInput, " for each countries in ", yearInput), names.arg=c(country$value), las = 2)
# 5. type
slices2 <- c(type$count)
lbls2 <- c(type$value)
pct2 <- round(slices2/sum(slices2)*100)
lbls2 <- paste(lbls2, pct2) # add percents to labels
lbls2 <- paste(lbls2,"%",sep="") # ad % to labels
pie(slices2,labels = lbls2, col=rainbow(length(lbls2)), main="Types of publications about ", topicInput, " in ", yearInput)
dev.off()
# put everything together in one place.
par(mfrow = c(2,2))
# be sure to run the code above.
# 0. subject
xcor <- barplot(subject$count, main = paste("Subjects of publications about", topicInput, "in", yearInput), names.arg=c(subject$value), las = 2, cex.names = 0.6)
text(x = xcor, y = subject$count, label = subject$count, pos = 3, cex = 0.8, col = "red")
# 1. keyword
xcor1 <- barplot(keyword$count, main = c("Keywords of publications about ", topicInput, " in ", yearInput), names.arg=c(keyword$value), las = 2)
text(x = xcor1, y = keyword$count, label = keyword$count, pos = 3, cex = 0.8, col = "red")
# 2. pub
barplot(pub$count, main = c("Publishers of the journals about ", topicInput, " in ", yearInput), names.arg=c(pub$value), col=rainbow(20, start=.7, end=.1), las = 2, cex.names = 0.9)
# 4. country
barplot(country$count, main = c("Quantities of publications about ", topicInput, " for each countries in ", yearInput), names.arg=c(country$value), las = 2)
dev.off()
# put everything together in one place.
par(mfrow = c(2,2))
par(mar=c(12,4,4,1))
# be sure to run the code above.
# 0. subject
xcor <- barplot(subject$count, main = paste("Subjects of publications about", topicInput, "in", yearInput), names.arg=c(subject$value), las = 2, cex.names = 0.6)
