Proxy PNNI Augmented Routing (Proxy PAR) ATM networks often carry other popular communication protocols such as TCP/IP. LAN emulation techniques, with LANE and MPOA being the most prominent ones, make it possible to support existing applications, but do not take advantage of many ATM capabilities. Furthermore, such server-based solutions often suffer from single point of failure problems. PNNI Augmented Routing (PAR), based on Private Network–Network Interface (PNNI), enables ATM and TCP/IP to be better integrated than in an emulation environment. In addition to that, Proxy PAR has been introduced as a minimal version of PAR that gives ATM-attached devices the ability to interact with PNNI devices without the complexity associated with a full PAR implementation. Proxy PAR has been conceived as a client/server interaction in which the client side is much simpler than the server side, permitting fast implementation and deployment in existing IPv4 devices. The main purpose of Proxy PAR is to allow non-ATM devices to use the flooding mechanisms provided by PNNI for registration and automatic discovery of services offered. Proxy PAR capable servers support filtering based on Virtual Private Network (VPN) IDs, IP protocols and address prefixes. This enables, for example, routers in a certain VPN running OSPF to find their neighboring routers without the manual configuration implied by other technologies such as Frame Relay. Interposition Agents: Transparently Interposing User Code at the System Interface Many contemporary operating systems utilize a system call interface between the operating system and its clients. Increasing numbers of systems are providing low-level mechanisms for intercepting and handling system calls in user code. Nonetheless, they typically provide no higher-level tools or abstractions for effectively utilizing these mechanisms. Using them has typically required reimplementation of a substantial portion of the system interface from scratch, making the use of such facilities unwieldy at best.This paper presents a toolkit that substantially increases the ease of interposing user code between clients and instances of the system interface by allowing such code to be written in terms of the high-level objects provided by this interface, rather than in terms of the intercepted system calls themselves. This toolkit helps enable new interposition agents to be written, many of which would not otherwise have been attempted. This toolkit has also been used to construct several agents including: system call tracing tools, file reference tracing tools, and customizable filesystem views. Examples of other agents that could be built include: protected environments for running untrusted binaries, logical devices implemented entirely in user space, transparent data compression and/or encryption agents, transactional software environments, and emulators for other operating system environments. Maintenance of a Spanning Tree in Dynamic Networks Many crucial network tasks such as database maintenance can be efficiently carried out given a tree that spans the network. By maintaining such a spanning tree, rather than constructing it “from- scratch” due to every topology change, one can improve the efficiency of the tree construction, as well as the efficiency of the protocols that use the tree. We present a protocol for this task which has communica- tion complexity that is linear in the “actual” size of the biggest connected component. The time complexity of our protocol has only a polylogarith- mic overhead in the “actual” size of the biggest connected component. The communication complexity of the previous solution, which was considered communication optimal, was linear in the network size, that is, unbounded as a function of the “actual” size of the biggest connected component. The overhead in the time measure of the previous solution was polynomial in the network size.In an asynchronous network it may not be clear what is the meaning of the “actual” size of the connected component at a given time. To capture this notion we define the virtual component and show that in asynchronous networks, in a sense, the notion of the virtual component is the closest one can get to the notion of the “actual” component. Multimedia Network Management as Global Control Global control refers to influencing the global state of a system on a slow time scale, in order to achieve management objectives. In multimedia networks, global control operations can be realized by tuning the behavior of network controllers in a coordinated way. We distinguish between four classes of global control operations, namely, managing protocols and algorithms, managing adaptivity, managing robustness, and managing (indirect) interactions among controllers. This paper focuses on managing indirect interactions among controllers. Such interactions occur, because controllers adapt to changes in the network state and—by applying control—influence the network state and thus other controllers in a complex way. We present experiments in which different resource controllers of a multimedia network interact. We show that the performance of the system is strongly affected by indirect interactions among these controllers. We demonstrate how the management system can control the effect of such interactions, by modifying specific control parameters associated with the control system. These results were obtained using an emulation platform which runs an executable model of the traffic control system and management agents, emulating in real-time the behavior of routers, connection managers, link admission controllers, etc. Information technology and the internet  Einführung in die technischen Grundlagen des Internets fassungDas Internet kann vereinfacht als ein globales Computernetz von Universitäten, Regierungsstellen, Unternehmen, Privatpersonen, usw. bezeichnet werden. Es wurde 1969 als ‚ARPANET‘geboren. Geburtshelfer war das amerikanische Verteidigungsministerium, das der Advanced Research Project Agency (ARPA) den Auftrag erteilt hatte, ein Kommunikationssystem für Computer zu erstellen, das auch nach einem Atomschlag noch funktionsfähig wäre. Im September 1969 war es dann soweit: Der Netzbetrieb zwischen vier Standorten an der University of Utah, der University of California und SRI International, Menlo-Park wurde aufgenommen. Kurze Zeit später schlossen sich andere Universitäten dem Verbund an. 1971 gab es bereits mehr als 30 Knoten im sogenannten ARPANET. In den Jahren 1973/1974 wurde dann das heute noch gültige Kommunikationsprotokoll Transmission Control Protocol/Internet Protocol (TCP/IP) entwickelt. 1983 war dieses Netz so groß geworden, daß es in einen militärischen Teil, das MILNET, und einen forschungsorientierten Teil, das ARPANET, aufgespalten werden mußte. Letzteres wurde über einige Zwischenstufen in INTERNET umbenannt. Um Universitäten den Zugang zu Hochleistungsrechnern zu verschaffen, schuf die National Science Foundation (NSF) ein Netz, das NSF-NET, das 1987 bereits Übertragungsraten von 1,5 und ab den 90ern 45 Mbit/s ermöglichte. Internet — Netz der Netze fassungDas Internet und die mit ihm verbundenen Technologien sind zu dem Thema der ausgehenden 90er Jahre geworden. Das Internet ist ein TCP/IP basierter Netzverbund aus derzeit über 6 Millionen Rechnern und über 80 Millionen Anwendern. Seine Anfange nahm es mit dem bereits in Kapitel 5.3 erwähnten ARPANET. Inzwischen wurde aus dem ARPANET das Internet, das fast vollständig auf dem Client/Server-Prinzip beruht, wie im Verlauf dieses Kapitels noch aufgezeigt wird. Obwohl sich das Internet als sehr komplizierter Wirrwarr aus Begriffen und Strukturen darstellt, ist es dem Leser möglich, direkt in médias res zu gehen. Alles, was man benötigt, um die Funktionsweisen des Internets zu verstehen, wurde bereits im Kapitel 5.3 behandelt. Das Internet spricht IP und damit kennt der Leser seine Mechanismen. Der Aufbau der 32-Bit Adressen wurde erläutert, wie Internet-Adressen durch DNS in logische Namen umgesetzt werden, ist ebenfalls klar und auf welchen Methoden das Routing basiert, wurde in den vorherigen Kapiteln schon angesprochen. Der Leser weiß sogar, wie Mails verschickt werden (SMTP, X.400), wie ein internet-weiter Verzeichnisdienst aufgebaut sein könnte (X.500) und nach welchen Regeln das Internet in Zukunft funktionieren wird (IPv6). Nichts spricht dagegen, sich mitten in die Materie zu stürzen. Empirische Validation der Virtualisierung fassungDas folgende Kapitel widmet sich der Überprüfung der technologischen Qualifikation von Intranet/Extranet als Enabler der Virtualisierung. Da Intranet/Extranet auf den im Internet verwendeten Technologien basiert, wird zunächst das Internet als Informations- und Kommunikationsplattform vorgestellt und dessen Dienste und technologische Prinzipien erläutert (IV/1.1). Darauf folgt die Einordnung und Darstellung der Grundlagen von intranet/Extranet, indem die gewonnenen Erkenntnisse auf den Enabler als unternehmerische Konkretisierungsform der InternetTechnologien übertragen werden (IV/1.2). Im Anschluß daran wird die Eignung von Intranet/Extranet als Enabler der Virtualisierung analysiert (IV/1.3). Die Untersuchung orientiert sich dabei an den bei der Herleitung des technologischen Anforderungsprofils des Enablers unter III/4.1 beschriebenen Faktoren. Online-Marketing: Charakteristika und Anforderungen fassungVor dem Hintergrund hoher Wachstumsraten und dem Interesse kommerzieller Anbieter am Internet gewinnt die Diskussion um den Aufbau und die Gestaltung von Online-Anwendungen an Bedeutung. Die Infrastruktur und Anwendungen stellen jedoch eine Vielzahl von Optionen zur Auswahl. Sollen elektronische Märkte im Rahmen eines sinnvollen Marketinginstrumentariums bearbeitet werden, so müssen zuvor die spezifischen Besonderheiten eines globalen, computervermittelten Online-Mediums, wie es das Internet darstellt, identifiziert sowie Probleme analysiert und Anforderungen formuliert werden.