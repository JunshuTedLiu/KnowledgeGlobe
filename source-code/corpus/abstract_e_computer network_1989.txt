Hypercube embedding heuristics: An evaluation The hypercube embedding problem, a restricted version of the general mapping problem, is the problem of mapping a set of communicating processes to a hypercube multiprocessor. The goal is to find a mapping that minimizes the length of the paths between communicating processes. Unfortunately the hypercube embedding problem has been shown to be NP-hard. Thus many heuristics have been proposed for hypercube embedding. This paper evaluates several hypercube embedding heuristics, including simulated annealing, local search, greedy, and recursive mincut bipartitioning. In addition to known heuristics, we propose a new greedy heuristic, a new Kernighan-Lin style heuristic, and some new features to enhance local search. We then assess variations of these strategies (e.g., different neighborhood structures) and combinations of them (e.g., greedy as a front end of iterative improvement heuristics). The asymptotic running times of the heuristics are given, based on efficient implementations using a priority-queue data structure. FMS scheduling as cooperative problem solving This paper describes an FMS scheduling method that treats an FMS as a group of problem-solving agents cooperating to perform manufacturing jobs. The main thrusts of such a method include the ability to handle the dynamically changing production conditions, its taking into account the communication method, the improved reliability, and the use of distributed control. The paper emphasizes research issues associated with various aspects of the cooperative problem-solving method, including: (1) dynamic task assignments, (2) the coordination mechanism, and (3) knowledge-based scheduling as problem solving. A simulation study which compares the performance of the cooperative problem solving approach with that of the more traditional scheduling approaches is also reported. The capacitated maximal covering location problem with backup service The maximal covering location problem has been shown to be a useful tool in siting emergency services. In this paper we expand the model along two dimensions — workload capacities on facilities and the allocation of multiple levels of backup or prioritized service for all demand points. In emergency service facility location decisions such as ambulance sitting, when all of a facility's resources are needed to meet each call for service and the demand cannot be queued, the need for a backup unit may be required. This need is especially significant in areas of high demand. These areas also will often result in excessive workload for some facilities. Effective siting decisions, therefore, must address both the need for a backup response facility for each demand point and a reasonable limit on each facility's workload. In this paper, we develop a model which captures these concerns as well as present an efficient solution procedure using Lagrangian relaxation. Results of extensive computational experiments are presented to demonstrate the viability of the approach. Analysis of real-time properties and rules for setting protocol parameters of MAP networks This paper reports on an evaluation of real-time properties of MAP (Manufacturing Automation Protocol) networks by analytical considerations and measurements. Based on a model of the time schedule of a communication cycle figures for response times (transport system) and message delays (MAC layer) are given. The influence of some options for handling acknowledgments within the transport layer is shown. The message delay at MAC layer is separated into an implementation-dependent and a protocol-dependent protion, and an upper bound is derived. Rules for selecting protocol parameters affecting real time behavior are given. Aspects for improved implementations of communication controllers for MAP networks are discussed. Large fault-tolerant interconnection networks This paper deals with reliability and fault-tolerant properties of networks. We first survey general reliability properties of networks, in particular those concerning diameter vulnerability. Then we study in details reliability properties of some families of networks in particular de Bruijn and Kautz networks and their generalizations which appear as very good fault-tolerant networks. Threshold phenomena in the transient behaviour of Markovian models of communication networks and databases This paper accompanies a talk given at the Workshop on Mathematical Methods in Queueing Networks held at the Mathematical Sciences Institute at Cornell University in August 1988. In earlier work we had exhibited a threshold phenomenon in the transient behaviour of a closed network of ./M/1 nodes: When there areN customers circulating, and the initial state isx, letdxN(t) denote the total variation distance between the distribution at timet and the stationary distribution. Let dN(t) = maxxdxN(t). We explicitly foundaN proportional toN such thatdN(taN)→1 forevery t<1, anddN(taN)→0 forevery t>1. Thus it appears that the network has not yet converged to stationarity uptoaN, but has converged to stationarity afteraN, soaNcan be naturally interpreted as the settling time of the network. Here we briefly deal with some other similar models — closed networks of ./M/m nodes, a well studied model for circuit switched networks, and a model of Mitra for studying concurrency control in databases. Similar threshold phenomena are established in the transient behaviour of these models. Some efficient computational algorithms related to phase models his paper develops efficient computational algorithms for some models that utilize phase type distributions. As in other instances, such as matrix-geometric methods, where the PH-distribution lends itself to useful and efficient computational methods, we examine how certain probabilities based on these distributions may be efficiently computed. The examples that we consider include token ring networks, simple multiqueues, and order statistics. By exploiting the geometric nature of PH-densities, it is shown that certain exponential time computations can be reduced to linear time, if recursive algorithms are used. We demonstrate speedup with the aid of a practical example, using a recursive as well as a nonrecursive algorithm, in verifying the stability of a queue on a token ring network. Supercube: An optimally fault tolerant network architecture  new class of interconnection network topology is proposed for parallel and distributed processing. The attractive features of this class include (a) the network can be constructed for any number of computing nodes, (b) the network is incrementally expandable, i.e., a new node can easily be added to the existing network, (c) it has good fault-tolerant characteristics (measured by the connectivity of the network graph) and (d) it has small delay characteristics (measured by the diameter of the network graph). The node connectivity of the network is equal to the minimum node degree. In this sense the network is optimally fault-tolerant. The Space Weather Forecast Program This paper describes the Space Weather Forecast Program managed by the Communications Research Laboratory of Japan. It is a long-range program consisting of three phases of five years each. This program emerged after an effort to investigate future needs for space environment prediction. We conclude that solar flares and magnetic storms are two main critical phenomena which will affect human's space activities in the 21st century. The core of the program is to set up a Space Weather Forecast Center which has core facilities: (1) a computer network system; (2) ground facilities for continuous observation of the Sun; and (3) a satellite-based space environment monitoring system. Emphasis is placed upon the necessity of internal cooperation for efficient operation of the Forecast Center. Location of Software in Distributed Computing Systems The planning and design of computer networks give rise to many location problems. These may be split into those primarily concerned with placement of hardware and those with software. Here, a broad overview of location of software components (programs and data files) is given, together with a brief appraisal of the state-of-the-art for various problems. Probabilistic verification of communication protocols Complete behavior of a communication protocol can be very large. It is worth investigating whether partial exploration of the behavior generates reasonable results. We present such a procedure which performs partial exploration using most-probable-first search. Some of the ideas used in this procedure are based on a convolutional decoding procedure due to Jelinek and a performance evaluation procedure due to Rudin. Multiple trees of protocol behavior are constructed. Some results on estimating the probability of encountering an unexplored state in a finite run of a protocol are also presented. A new influenza surveillance system in France: The Ile-De-France “GROG”. I. Principles and methodology The aims of influenza surveillance have changed over the years. The early detection of epidemics is essential for practical decisions on vaccine development, strategy of vaccine prophylaxis, chemoprophylaxis or chemotherapy. A new surveillance system is presented which combines the classical specific data related to the isolations, direct detection of virus as well as serological findings, with non-specific indices. The rationale for definition and elaboration of such indices is discussed: selected parameters deal with medical activity of a panel of sentinel doctors (general practitioners and pediatricians), notifications of diagnosed acute respiratory viral infections, measure of emergency doctors activity, absence from work (as seen by physicians, insurance agencies or industrial personnel), selected drug prescription and consumption, hospital admissions. The sentinel physicians also cooperate in taking samples from cases, thereby extending the field of specific surveillance since they have contact with standard cases of the disease and not only hospitalized patients. A weekly comparison of time variations of specific and non-specific indices should permit a reliable evaluation of the epidemic situation and therefore be of great help for practical decisions. The system has operated since 1984, and the initial hypothesis of the sensitivity of some of the indices has already been verified. Responsive, deterministic IEEE 802.5 token ring scheduling This paper presents a novel approach for scheduling the IEEE 802.5 token ring. This approach not only guarantees deadlines for synchronous class messages, but also dramatically reduces asynchronous class response times. Further, highly responsive guaranteed service is introduced for alert class asynchronous messages. Conventional use of the IEEE 802.5 token ring standard guarantees synchronous communication services using Time Domain Multiplexing (TDM) techniques while relegating asynchronous class message services to background status. The result is poor responsiveness. Further, the TDM schedules tend to be fragile and difficult to modify and extend. This paper presents an algorithmic-based scheduling approach that supportsa priori schedulability determination for arbitrary synchronous message sets without the costly development, testing, and tuning of TDM schedules. This capability allows the IEEE 802.5 standard to support dynamic, adaptive, and reconfigurable run-time environments where the inflexibility of TDM would be prohibitive. Advanced real-time scheduling theory is applied to the IEEE 802.5 token ring standard and dramatically enhances asynchronous class messages' responsiveness while still maintaining guaranteed service for the synchronous class. The result is a highly responsive real-time ring that can form the backbone of predictable, stable, and extendible real-time systems. Initial failures in distributed computations We investigate the possibility of solving problems in completely asynchronous message passing systems where a number of processes may fail prior to execution. By using game-theoretical notions, necessary and sufficient conditions are provided for solving problems is such a model with an without a termination requirement. An upper bound on the message complexity for solving any problem in the model is given, as well as a simple design concept for constructing a solution to any solvable problem. Location of Transfer Centres on Segments of a Communication Network with Proportional Traffic The problem of placing bridges to alleviate congestion in a heavily loaded local-area computer network is briefly described. It is suggested that the generalization to that of placing transfer centres in other situations in which demand is arranged linearly may also be profitable. In order to obtain a better understanding of the problem, this paper concentrates on models in which demand is proportional (that is, the traffic intensity from one user to another is proportional to the product of their activity rates as measured by the traffic each produces). The results are rather surprising, it being demonstrated that the extent to which congestion can be relieved is severely limited. Information management for data retrieval in a picture archive and communication system Data stored in a Picture archive and communication system (PACS) must be organized to permit efficient retrieval. The concept of a unique data object identifier (UID) permits a fundamental partitioning of the problem into a storage system, indexed by UID, and a database containing descriptive elements. The data-base serves to map user retrieval requests, expressed in terms of clinically relevant descriptive elements, and into UIDs of specific data objects. Different data organization mechanisms are employed by imaging modalities, thereby making the structure of a generic PACS database complex. One solution may be derived by analogy from film-based systems. Images and other data objects may be organized, by application of modality and site specific rules, into electronic folders. Folders may then be organized into a patient master folder or userdefined reference folders. Such an organization provides an easily understood user access model for information stored in PACS archives. This report presents a PACS architecture comprised of an Information Management System (IMS) and Information Storage System (ISS). Entity-relationship diagrams are presented to define a schema for the IMS database, based on the folder analogy. The folder concept and its relationship to the ACR-NEMA Standard are discussed. A single server queue with gated processor-sharing discipline In this paper we consider a single server queue in which arrivals occur according to a Poisson process and each customer's service time is exponentially distributed. The server works according to the gated process-sharing discipline. In this discipline, the server provides service to a batch of at mostm customers at a time. Once a batch of customers begins service, no other waiting customer can receive service until all members of the batch have completed their service. For this queue, we derive performance characteristics, such as waiting time distribution, queue length distribution etc. For this queue, it is possible to obtain the mean conditional response time for a customer whose service time is known. This conditional response time is a nonlinear function (as opposed to the linear case for the ordinary processor-sharing queue). A special case of the queue (wherem=∞) has an interesting and unusual solution. For this special case, the size of the batch for service is a Markov chain whose steady state distribution can be explicitly written down. Apart from the contribution to the theory of Markov chains and queues, the model may be applicable to scheduling of computer and communication systems. Automaton models of swapping and replacement systems for computer memory We investigate various swapping and replacement systems for computer memory using infinite deterministic and nondeterministic automaton models. Some propositions are proved which lead to exact or approximate determination of the set of reachable memory states. Distributed deadlock resolution in store-and-forward networks We present a simple distributed algorithm that resolves store-and-forward deadlocks in data communication networks. The basic idea of the algorithm is to detect cycles of nodes that may cause store-and-forward deadlocks, and to rotate packets along these cycles. The algorithm uses a fixed amount of storage in each node for its execution, and, under reasonable assumptions upon the routing and packet handling, it ensures that packets that enter the network arrive at their destinations in finite time. Maximal selection in tandem networks with symmetric hearing range We consider an infinite tandem network in which every node is capable of hearing its neighbors up to a given distancen. At any moment of time every node may contain in the top of its queue a message destined to one of its neighbors. This network can be used as a model for a microwave or optic link with many users. For small and largen we investigate the maximal selection of nodes in the network, for which their transmissions are collision-free. For a large hearing range we show that the upper bound on the maximal selection, which is found herein, is asymptotically achievable. For small hearing ranges we show that a greedy selection is better but not asymptotically optimal. We also specify a sequence of upper bounds which converge to the maximal throughput. Understanding naming in distributed systems Naming in distributed systems is modelled as a string translation problem. Viewing names as strings and name resolution mechanisms as syntax directed translators provides a formal handle on the loosely understood concepts associated with naming: we give precise definitions for such informal terminology as name spaces, addresses, routes, source-routing, and implicit-routing; we identify the properties of naming systems, including under what conditions they support unique names, relative names, absolute names, and synonyms; and we discuss how the basic elements of the model can be implemented by name servers. A full sensing window Random-Access algorithm for messages with strict delay constraints We consider the Channel Multiple-Access problem for messages with strict delay constraints. The constraints are represented by an upper bound on the transmission delays. For this problem, and for binary collision-noncollision feedback per slot, we present a simple full sensing window Random-Access algorithm. We analyze the algorithm and we compute the fraction of maintained traffic and the expected delay for the successfully transmitted packet, for various input Poisson intensities and various values of the bound on the transmission delays. A kernel system for iconic image processing We present a proposal for the design of a kernel system for iconic image processing operations and construct a virtual machine for image processing. The data structures and typical operations in the field of digital image processing are discussed. Furthermore, we give a formal definition of the operations and data objects required and describe one way to implement them by using the generic features of Ada.ZusammenfassungIm folgenden stellen wir einen Gestaltungsentwurf für ein ikonisches Bildverarbeitungssystem vor und beschreiben eine virtuelle Maschine, die die hierfür notwendigen Operationen realisiert. Es werden sowohl Datentypen als auch die charakteristischen Operationen der Bildverarbeitung diskutiert, und es werden Datenobjekte sowie Bildverarbeitungsoperationen formal definiert. Abschließend wird eine mögliche Implementation skizziert, die auf den generischen Konstrukten der Programmiersprache Ada basiert. Aednet: A single-discipline network in a multi-national setting The computer-mediated network is a moderately expanding phenomenon. A major reason for this growth is the need for transferring technology to developing nations. But because many of these nations are not traditional users of advanced technology and because even the purveyors are not yet fully comfortable with the networks, the medium is not being used as much as perhaps it ought to be. In establishing a multinational network, one should be careful to treat all potential users with equity and not create an informational elite. Part of the challenge of such a system is making it accessible to operatives in the field. An effective way of introducing a network is to blend it with existing technologies, keep the costs down and the quality of information up, provide a usable information-retrieval system, and pay attention to microand macro-ergonomics. The Adult Education Network (AEDNET) of the Kellogg Project at Syracuse University has started working on a next-generation computer-mediated network system. It is proposed that AEDNET involve three action groups in the project: researchers, those interested in social implications, and users. Visual evoked potential processing under acceleration stress A study of the use of visual evoked potentials to detect acceleration induced blackout is presented. Decisions concerning the presence or absence of the visual evoked potential within the measured EEG were made using detection and estimation-based approaches. The performance of each technique is evaluated in two ways: (a) via a performance index (PI) which is introduced in this work, and (b) by the accuracy of pure detection. Variations of the main processing techniques such as output averaging and decision thresholding were also investigated. Double-pulse neutron spectrometers on IBR-2 and-30 fast-reactor beams. Basic characteristics and directions of research  Valid inequalities and facets of the capacitated plant location problem Recently, several successful applications of strong cutting plane methods to combinatorial optimization problems have renewed interest in cutting plane methods, and polyhedral characterizations, of integer programming problems. In this paper, we investigate the polyhedral structure of the capacitated plant location problem. Our purpose is to identify facets and valid inequalities for a wide range of capacitated fixed charge problems that contain this prototype problem as a substructure.The first part of the paper introduces a family of facets for a version of the capacitated plant location problem with a constant capacity for all plants. These facet inequalities depend on the capacity and thus differ fundamentally from the valid inequalities for the uncapacited version of the problem.We also introduce a second formulation for a model with indivisible customer demand and show that it is equivalent to a vertex packing problem on a derived graph. We identify facets and valid inequalities for this version of the problem by applying known results for the vertex packing polytope. A neural network algorithm for the multiple traveling salesmen problem We developed an efficient neural network algorithm for solving the Multiple Traveling Salesmen Problem (MTSP). A new transformation of the N-city M-salesmen MTSP to the standard Traveling Salesmen Problem (TSP) is introduced. The transformed problem is represented by an expanded version of Hopfield-Tank's neuromorphic city-position map with (N + M-1)-cities and a single fictitious salesmen. The dynamic model associated with the problem is based on the Basic Differential Multiplier Method (BDMM) [26] which evaluates Lagrange multipliers simultaneously with the problem's state variables. The algorithm was successfully tested on many problems with up to 30 cities and five salesmen. In all test cases, the algorithm always converged to valid solutions. The great advantage of this kind of algorithm is that it can provide solutions to complex decision making problems directly by solving a system of ordinary differential equations. No learning steps, logical if statements or adjusting of parameters are required during the computation. The algorithm can therefore be implemented in hardware to solve complex constraint satisfaction problems such as the MTSP at the speed of analog silicon VLSI devices or possibly future optical neural computers. Location Problems Arising in Computer Networks The planning and organization of computer networks give rise to many location problems. These may be split into those primarily concerned with placement of hardware and those with software. Here a broad overview of location and hardware components is given, together with a brief appraisal of the ‘state of the art’ for various problems. Facile: A symmetric integration of concurrent and functional programming Facile is a symmetric integration of concurrent and functional programming. The language supports both function and process abstraction. Functions may be defined and used within processes, and processes can be dynamically created during expression evaluation. In this work we present two different descriptions of the operational semantics of Facile. First, we develop a structural operational semantics for a small core subset of Facile using a labeled transition system. Such a semantics is useful for reasoning about the operational behavior of Facile programs. We then provide an abstract model of implementation for Facile: theConcurrent and Functional Abstract Machine (C-FAM). The C-FAM executes concurrent processes evaluating functional expressions. The implementation semantics includes compilation rules from Facile to C-FAM instructions and execution rules for the abstract machine. This level of semantic description is suitable for those interested in implementations. Properties of semijoin sequences The problem of finding optimum semijoin sequence for an arbitrary query under linear cost function for the transmission cost is NP-hard. Hence heuristic algorithms with desirable properties are explored. In this paper four properties of semijoin programs for distributed query processing are identified. The use of these properties in constructing semijoin sequence is justified. An existing algorithm is modified incorporating these properties. Empirical comparison with existing algorithms shows the superiority of the proposed algorithm. Quantification of plasticity of plant traits in response to light intensity: comparing phenotypes at a common weight lasticity of plant traits is commonly quantified by comparing different phenotypes at the same age. In this paper, we present a method in which the effect of resource conditions on plant weight is used as a basis for quantifying the plasticity of individual plant traits. Abutilon theophrasti individuals were grown in, and some transferred between, high and low intensity light conditions, resulting in four phenotypes. Plant traits were found to exhibit different degrees of plasticity, decreasing in this order: height; specific leaf area; allocation to branch roots; allocation to leaf area; number of nodes; allocation to tap roots; allocation to stem; allocation to leaf weight. Under these conditions, individuals of the four phenotypes had very similar heights when compared at the same age, but very different heights when compared at the same plant weight. The latter comparison indicates that light intensity influences height independently of its influence on plant weight. Individuals that were transferred from high to low light had greater allocation that had not been transferred, but individuals of all phenotypes had nearly the same leaf weight allocation when compared at the same plant weight. The latter comparison indicates that light intensity influeces leaf weight allocation mostly by influencing plant weight. In the phenotype resulting from the transfer of plants from low to high light, reproduction was stimulated much less than plant weight and axillary leaf growth, and reproductive allocation was delayed relative to the other three phenotypes. We conclude that when plasticity is measured by comparing phenotypes at the same plant weight, the effects of resources on plant size can be excluded from the quantification. Stationary distributions in a queueing system with vacation times and limited service This paper deals with a modified M/G/1 queueing system with finite capacity and a walking server. Units waiting are served up to a limited number before the server takes a vacation time and later returns to the queue again. A computational method for the stationary queue length distribution is developed and illustrated with a numerical example. The model was motivated by similar channel access mechanisms in token-ring local area networks. Topological comparison of perfect shuffle and hypercube Novel topological measures for static multiprocessor interconnection networks,disconnectivity, looseness, andcost-effectiveness, are developed. These and other measures are employed for a comparative analysis of such networks. The goal of this analysis is to predict network effectiveness, without resorting to execution benchmark techniques. In particular, we compare thehypercube andperfectshuffle-nearest-neighbor networks, and show that they are the best candidates for multiprocessor interconnections. We specifically find that the hypercube is capable of somewhat better performance than perfect-shuffle-nearest-neighbor, but the latter is significantly more cost-effective. Multiaccess Link Control The need for multiaccess protocols arises whenever a resource is shared (and thus accessed) by a number of independent users. One main reason contributing to such a situation is the need to share scarce and expensive resources. An excellent example is typified by time-sharing systems. Time-sharing was developed in the 1960s to make the powerful processing capability of a large computer system available to a large population of users, each of whom has relatively small or infrequent demands so that a dedicated system cannot be economically justified. Two advantages are gained: the smoothing effect of large populations on the demand, an effect resulting from the law of large numbers, and a lower cost per unit of service resulting from the (almost always existing) economy of scale. A Brief History of Computer Networking Computer networking as we know it today may be said to have gotten its start with the Arpanet development in the late 1960s and early 1970s. Prior to that time there were computer vendor “networks” designed primarily to connect terminals and remote job entry stations to a mainframe. But the notion of networking between computers viewing each other as equal peers to achieve “resource sharing” was fundamental to the arpanet
design [1]. The other strong emphasis of the Arpanet work was its reliance on the then novel technique of packet switching to efficiently share communication resources among “bursty” users, instead of the more traditional message or circuit switching. Formal Methods for Protocol Specification and Validation As evidenced by the earlier chapters in this book, increasingly numerous and complex communication protocols are being employed in distributed systems and computer networks of various types. The informal techniques used to design these protocols have been largely successful, but have also yielded a disturbing number of errors or unexpected and undesirable behavior in most protocols. This chapter describes some of the more formal techniques which are being developed to facilitate design and implementation of protocols. The Reference Model for Open Systems Interconnection In the mid-1970s, the development and use of resource-sharing computer networks began to achieve considerable attention. The early successes of the arpanet
[1]  and cyclades [2], the immediate commercial potential of packet switching, satellite, and local network technology, and the declining cost of hardware made it apparent that computer networking was quickly becoming an important area of innovation and commerce. It was also apparent that to utilize the full potential of such computer networks, international standards would be required to ensure that any system could communicate with any other system anywhere in the world. Flow Control Protocols A packet-switched network may be thought of as a distributed pool of productive resources (channels, buffers, and switching processors) whose capacity must be shared dynamically by a community of competing users (or, more generally, processes) wishing to communicate with each other. Dynamic resource sharing is what distinguishes packet switching from the more traditional circuit-switching approach, in which network resources are dedicated to each user for an entire session. The key advantages of dynamic sharing are greater speed and flexibility in setting up users’ connections across the network and more efficient use of network resources after the connection is established. Routing Protocols In this chapter, we provide an overview of routing techniques used in a variety of computer communication networks in current operation. These include the public data networks tymnetandtranspac (the former is a specialized common carrier network based in the United States, but with connections to Europe as well; the latter is the French government PTT data network), arpanet, the U.S. Department of Defense Computer Network, and the commercial network architectures SNA (Systems Network Architecture) and DNA (Digital Network Architecture), developed by IBM and Digital Equipment Corporation, respectively. The networks are all examples of store-and-forward networks with data packets* moving from a source to a destination, buffered at intermediate nodes along a path. The path is defined simply as the collection of sequential communication links ultimately connecting source to destination. Network Interconnection and Gateways As computer networks proliferate, the importance of interconnecting networks increases. The recent explosion in the numbers of personal computers is leading to even greater growth in the local area network (LAN) area. Interconnecting these diverse networks presents many technical problems, and may be pursued in many ways [9], [16], [31], [32], [37]. IBM’s Systems Network Architecture A network is more than simply a collection of machines and communication lines. A properly designed network serves a particular purpose for a particular user or class of users. In order to design networks for different users and purposes while minimizing design effort, one can employ a network architecture. In this chapter we look at the services provided by a network, examine what an architecture is, and then look at Systems Network Architecture (SNA),* its design principles and how it enables a network to provide the required services. Our discussion of the architecture appears in two major sections, transporting data and distributed programming. We have attempted to minimize the amount of jargon in this description of SNA. Necessary new terms are introduced in italics. After looking at the architecture, we conclude with a discussion of how SNA has applied the underlying principles. Message Handling System Standards and Office Applications The author of this chapter made the following prediction in 1977: “During the next 50…years message systems will have as great an impact on the way business is done in our society as the impact that the telephone had on business practices during the last 100 years” [1]. That same article went on to describe some of the benefits of electronic messaging used for interpersonal interaction. Messaging was described in terms of an electronic post office box—a kind of data base where messages could be entered by a sender and retrieved at a later time by one or more recipients. This approach to messaging grew out of experiences on the U.S. Department of Defense arpanet
in the mid-1970s. Character-Oriented Link Control A data link control protocol is a set of very specific rules governing the interchange of data over an interconnecting communication link between business machines. X.25 Packet-Switched Network Layer The 1970s heralded the beginning of the development of public data networks (PDNs), offering packet switching services, e.g., Canada: Datapac, France: Transpac, USA: Telenet. The commercial viability of these networks hinged largely on the development and adoption of standard access protocols. These standards would facilitate the connection of varying types of data terminal equipments (DTEs) to the various public networks being developed as well as facilitate international internetworking. Circuit-Switched Network Layer CCITT Recommendation X.21 has been developed as “The General Purpose Interface between Data Terminal Equipment (DTE) and Data Circuit-terminating Equipment (DCE) for Synchronous Operation on Public Data Networks” [1], The only “general purpose” part, however, is the designation of the physical elements which include the electrical (X.26/X.27), functional (X.24), and mechanical (ISO 4903) characteristics described in Chapter 3 (Bertine). Additionally, the basic family of quiescent signals and states for the interface is specified. These provide the fundamental components of X.21 which will apply to all modes of operation in new data communications applications for circuit-switched, packet-switched, and general purpose integrated services [2]. Xerox Network Systems Architecture This chapter describes the major characteristics of the Xerox Network Systems (XNS) architecture and relates it to the needs of end users that motivated its design. First, we will examine the basic design principles of XNS and compare its overall model of layers to that of the ISO Open Systems Interconnection (OSI) model. Within that model, we will move from the bottom layers up through the top layers—from the communications channel through support applications to the direct user applications. Bit-Oriented Data Link Control A new breed of data link control has achieved widespread acceptance. Known under a variety of names and mnemonics—adccp, HDLC, LAPB, LAPD, BDLC, SDLC, UDLC, LLC, etc.—it is based on a bit-oriented, rather than character-oriented, organization and format. It offers a high level of flexibility, enhanceability, adaptability, reliability, and efficiency of operation for today’s as well as for tomorrow’s synchronous data communications needs. OSI Transport and Session Layers The end-to-end protocol of the Transport Layer enhances the data transmission quality of the Network Service to a level satisfactory for use by the upper three OSI layers. Transport Services support the protocol of the Session Layer, which provides a wide variety of dialogue and synchronization control services for use by the upper two OSI layers. A basic knowledge of the Transport and Session Layers is fundamental to understanding OSI. Adaptive allocation of computational requirements to heterogeneous networks Computational requirements consist of active parts that can be fulfilled by processors only, and of passive parts consuming a certain amount of storage. By allocating these requirements to networks of arbitrary type a compatibility problem has to be solved at first. If it does not lead to a unique solution, further criteria can be applied to optimize performance measures and the availability of the whole system. This optimization problem has been widely studied and classified before, but these approaches suffer from several shortcomings. We propose a new classification model that is based on the scheme of adaptive control. By using the underlying framework and combining it with functions for resource management in heterogeneous networks, we derive a new allocation mechanism. The combination with resource management decreases the overhead of the allocation mechanism and enables it to cope with heterogeneity. Bounded load indizes are used to reflect finite capacities. Their further advantage is that decisions can be based on absolute criteria instead of the relative ones that are applied in related work. The algorithms contain parameters to enable dynamic tuning.